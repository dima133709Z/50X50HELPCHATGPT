{"ast":null,"code":"var _jsxFileName = \"C:\\\\1\\\\src\\\\TicTacToe.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TicTacToe() {\n  _s();\n  const [isLoading, setIsLoading] = useState(true);\n  const [board, setBoard] = useState(Array(9).fill(null));\n  const [xIsNext, setXIsNext] = useState(true);\n  const [winner, setWinner] = useState(null);\n  const [movesCount, setMovesCount] = useState(0);\n  useEffect(() => {\n    // Ваши операции загрузки данных или настройки игры\n    // Например, загрузка данных из API или настройка игрового поля\n    setTimeout(() => {\n      setIsLoading(false); // Завершаем анимацию загрузки\n    }, 2000); // Длительность анимации загрузки (2 секунды)\n\n    // Ваша логика загрузки данных может отличаться\n  }, []);\n  function handleClick(i) {\n    const newBoard = board.slice();\n    if (winner || newBoard[i]) {\n      return;\n    }\n    newBoard[i] = xIsNext ? 'X' : 'O';\n    setBoard(newBoard);\n    setXIsNext(!xIsNext);\n    setMovesCount(movesCount + 1);\n    const calculatedWinner = calculateWinner(newBoard);\n    if (calculatedWinner) {\n      setWinner(calculatedWinner);\n    } else if (movesCount + 1 === 9) {\n      setWinner('Draw');\n    }\n  }\n  function renderSquare(i) {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"square\",\n      onClick: () => handleClick(i),\n      children: board[i]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this);\n  }\n  let status;\n  if (winner) {\n    status = winner === 'Draw' ? \"It's a Draw!\" : 'Winner: ' + winner;\n  } else {\n    status = 'Next player: ' + (xIsNext ? 'X' : 'O');\n  }\n  function calculateWinner(squares) {\n    const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n        return squares[a];\n      }\n    }\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"center-container\",\n    children: isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"preloader\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"preloader-inner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-board\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"status\",\n          children: status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"board-row\",\n          children: [renderSquare(0), renderSquare(1), renderSquare(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"board-row\",\n          children: [renderSquare(3), renderSquare(4), renderSquare(5)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"board-row\",\n          children: [renderSquare(6), renderSquare(7), renderSquare(8)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n}\n_s(TicTacToe, \"OZe51KCNp5My6Uh3cjPAHuOMPcI=\");\n_c = TicTacToe;\nexport default TicTacToe;\nvar _c;\n$RefreshReg$(_c, \"TicTacToe\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","TicTacToe","_s","isLoading","setIsLoading","board","setBoard","Array","fill","xIsNext","setXIsNext","winner","setWinner","movesCount","setMovesCount","setTimeout","handleClick","i","newBoard","slice","calculatedWinner","calculateWinner","renderSquare","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","status","squares","lines","length","a","b","c","_c","$RefreshReg$"],"sources":["C:/1/src/TicTacToe.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction TicTacToe() {\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [board, setBoard] = useState(Array(9).fill(null));\r\n    const [xIsNext, setXIsNext] = useState(true);\r\n    const [winner, setWinner] = useState(null);\r\n    const [movesCount, setMovesCount] = useState(0);\r\n\r\n    useEffect(() => {\r\n        // Ваши операции загрузки данных или настройки игры\r\n        // Например, загрузка данных из API или настройка игрового поля\r\n        setTimeout(() => {\r\n            setIsLoading(false); // Завершаем анимацию загрузки\r\n        }, 2000); // Длительность анимации загрузки (2 секунды)\r\n\r\n        // Ваша логика загрузки данных может отличаться\r\n    }, []);\r\n\r\n    function handleClick(i) {\r\n        const newBoard = board.slice();\r\n        if (winner || newBoard[i]) {\r\n            return;\r\n        }\r\n        newBoard[i] = xIsNext ? 'X' : 'O';\r\n        setBoard(newBoard);\r\n        setXIsNext(!xIsNext);\r\n        setMovesCount(movesCount + 1);\r\n\r\n        const calculatedWinner = calculateWinner(newBoard);\r\n        if (calculatedWinner) {\r\n            setWinner(calculatedWinner);\r\n        } else if (movesCount + 1 === 9) {\r\n            setWinner('Draw');\r\n        }\r\n    }\r\n\r\n    function renderSquare(i) {\r\n        return (\r\n            <button className=\"square\" onClick={() => handleClick(i)}>\r\n                {board[i]}\r\n            </button>\r\n        );\r\n    }\r\n\r\n    let status;\r\n    if (winner) {\r\n        status = winner === 'Draw' ? \"It's a Draw!\" : 'Winner: ' + winner;\r\n    } else {\r\n        status = 'Next player: ' + (xIsNext ? 'X' : 'O');\r\n    }\r\n\r\n    function calculateWinner(squares) {\r\n        const lines = [\r\n            [0, 1, 2],\r\n            [3, 4, 5],\r\n            [6, 7, 8],\r\n            [0, 3, 6],\r\n            [1, 4, 7],\r\n            [2, 5, 8],\r\n            [0, 4, 8],\r\n            [2, 4, 6],\r\n        ];\r\n        for (let i = 0; i < lines.length; i++) {\r\n            const [a, b, c] = lines[i];\r\n            if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n                return squares[a];\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <div className=\"center-container\">\r\n            {isLoading ? (\r\n                <div className=\"preloader\">\r\n                    <div className=\"preloader-inner\"></div>\r\n                </div>\r\n            ) : (\r\n                <div className=\"game-board\">\r\n                    <div>\r\n                        <div className=\"status\">{status}</div>\r\n                        <div className=\"board-row\">\r\n                            {renderSquare(0)}\r\n                            {renderSquare(1)}\r\n                            {renderSquare(2)}\r\n                        </div>\r\n                        <div className=\"board-row\">\r\n                            {renderSquare(3)}\r\n                            {renderSquare(4)}\r\n                            {renderSquare(5)}\r\n                        </div>\r\n                        <div className=\"board-row\">\r\n                            {renderSquare(6)}\r\n                            {renderSquare(7)}\r\n                            {renderSquare(8)}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TicTacToe;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}