{"ast":null,"code":"var _jsxFileName = \"C:\\\\50x50HelpingChatGPT\\\\src\\\\component\\\\TicTacToe\\\\TicTacToe.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport WinnerResults from '../WinnerResults/WinnerResults';\nimport GameBoard from '../GameBoard/GameBoard';\nimport StartButton from '../StartButton/StartButton';\nimport style from '../../styles/TicTacToe.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst boardSize = 50;\nconst consecutiveToWin = 5;\nfunction calculateWinner(squares) {\n  // Реализация calculateWinner\n}\nfunction TicTacToe() {\n  _s();\n  const [gameState, setGameState] = useState(\"loading\");\n  const [squares, setSquares] = useState(Array(boardSize * boardSize).fill(null));\n  const [xIsNext, setXIsNext] = useState(true);\n  const [winner, setWinner] = useState(null);\n  const [movesCount, setMovesCount] = useState(0);\n  const [showWinnerPopup, setShowWinnerPopup] = useState(false);\n  useEffect(() => {\n    const fetchData = async () => {\n      setTimeout(() => {\n        setGameState(\"notStarted\");\n      }, 2000);\n    };\n    fetchData();\n  }, []);\n  const restartGame = () => {\n    setGameState(\"started\");\n    setSquares(Array(boardSize * boardSize).fill(null));\n    setXIsNext(true);\n    setWinner(null);\n    setMovesCount(0);\n    setShowWinnerPopup(false);\n  };\n  const handleClick = i => {\n    if (winner || squares[i]) {\n      return;\n    }\n    const newSquares = [...squares];\n    newSquares[i] = xIsNext ? 'X' : 'O';\n    setSquares(newSquares);\n    setXIsNext(!xIsNext);\n    setMovesCount(movesCount + 1);\n    const calculatedWinner = calculateWinner(newSquares);\n    if (calculatedWinner) {\n      setWinner(calculatedWinner);\n      setShowWinnerPopup(true);\n    } else if (movesCount + 1 === boardSize * boardSize) {\n      setWinner('Draw');\n      setShowWinnerPopup(true);\n    }\n  };\n  const renderGameContent = () => {\n    if (gameState === \"loading\") {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: style.preloaderContainer,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: style.preloader\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this);\n    } else if (gameState === \"started\") {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(GameBoard, {\n          squares: squares,\n          onClick: handleClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), showWinnerPopup && /*#__PURE__*/_jsxDEV(WinnerResults, {\n          winner: winner,\n          startGame: restartGame\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 41\n        }, this)]\n      }, void 0, true);\n    } else {\n      return /*#__PURE__*/_jsxDEV(StartButton, {\n        onStartClick: restartGame\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 20\n      }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style.centerContainer,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.gameBoard,\n      children: renderGameContent()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n}\n_s(TicTacToe, \"KWmj4Qj1CM5006PtKmujVtD9iXk=\");\n_c = TicTacToe;\nexport default TicTacToe;\nvar _c;\n$RefreshReg$(_c, \"TicTacToe\");","map":{"version":3,"names":["React","useState","useEffect","WinnerResults","GameBoard","StartButton","style","jsxDEV","_jsxDEV","Fragment","_Fragment","boardSize","consecutiveToWin","calculateWinner","squares","TicTacToe","_s","gameState","setGameState","setSquares","Array","fill","xIsNext","setXIsNext","winner","setWinner","movesCount","setMovesCount","showWinnerPopup","setShowWinnerPopup","fetchData","setTimeout","restartGame","handleClick","i","newSquares","calculatedWinner","renderGameContent","className","preloaderContainer","children","preloader","fileName","_jsxFileName","lineNumber","columnNumber","onClick","startGame","onStartClick","centerContainer","gameBoard","_c","$RefreshReg$"],"sources":["C:/50x50HelpingChatGPT/src/component/TicTacToe/TicTacToe.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport WinnerResults from '../WinnerResults/WinnerResults';\r\nimport GameBoard from '../GameBoard/GameBoard';\r\nimport StartButton from '../StartButton/StartButton';\r\nimport style from '../../styles/TicTacToe.module.scss';\r\n\r\nconst boardSize = 50;\r\nconst consecutiveToWin = 5;\r\n\r\nfunction calculateWinner(squares) {\r\n    // Реализация calculateWinner\r\n}\r\n\r\nfunction TicTacToe() {\r\n    const [gameState, setGameState] = useState(\"loading\");\r\n    const [squares, setSquares] = useState(Array(boardSize * boardSize).fill(null));\r\n    const [xIsNext, setXIsNext] = useState(true);\r\n    const [winner, setWinner] = useState(null);\r\n    const [movesCount, setMovesCount] = useState(0);\r\n    const [showWinnerPopup, setShowWinnerPopup] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            setTimeout(() => {\r\n                setGameState(\"notStarted\");\r\n            }, 2000);\r\n        };\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n    const restartGame = () => {\r\n        setGameState(\"started\");\r\n        setSquares(Array(boardSize * boardSize).fill(null));\r\n        setXIsNext(true);\r\n        setWinner(null);\r\n        setMovesCount(0);\r\n        setShowWinnerPopup(false);\r\n    };\r\n\r\n    const handleClick = (i) => {\r\n        if (winner || squares[i]) {\r\n            return;\r\n        }\r\n\r\n        const newSquares = [...squares];\r\n        newSquares[i] = xIsNext ? 'X' : 'O';\r\n        setSquares(newSquares);\r\n        setXIsNext(!xIsNext);\r\n        setMovesCount(movesCount + 1);\r\n\r\n        const calculatedWinner = calculateWinner(newSquares);\r\n        if (calculatedWinner) {\r\n            setWinner(calculatedWinner);\r\n            setShowWinnerPopup(true);\r\n        } else if (movesCount + 1 === boardSize * boardSize) {\r\n            setWinner('Draw');\r\n            setShowWinnerPopup(true);\r\n        }\r\n    };\r\n\r\n    const renderGameContent = () => {\r\n        if (gameState === \"loading\") {\r\n            return (\r\n                <div className={style.preloaderContainer}>\r\n                    <div className={style.preloader}></div>\r\n                </div>\r\n            );\r\n        } else if (gameState === \"started\") {\r\n            return (\r\n                <>\r\n                    <GameBoard squares={squares} onClick={handleClick} />\r\n                    {showWinnerPopup && <WinnerResults winner={winner} startGame={restartGame} />}\r\n                </>\r\n            );\r\n        } else {\r\n            return <StartButton onStartClick={restartGame} />;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={style.centerContainer}>\r\n            <div className={style.gameBoard}>\r\n                {renderGameContent()}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TicTacToe;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}