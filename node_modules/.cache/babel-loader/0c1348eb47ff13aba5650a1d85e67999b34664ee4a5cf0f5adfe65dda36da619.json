{"ast":null,"code":"var _jsxFileName = \"C:\\\\1\\\\src\\\\component\\\\TicTacToe.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport GameBoard from './GameBoard';\nimport StartButton from './StartButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TicTacToe() {\n  _s();\n  const [isLoading, setIsLoading] = useState(true);\n  const [isGameStarted, setIsGameStarted] = useState(false);\n  const [board, setBoard] = useState(Array(9).fill(null));\n  const [xIsNext, setXIsNext] = useState(true);\n  const [winner, setWinner] = useState(null);\n  const [movesCount, setMovesCount] = useState(0);\n  useEffect(() => {\n    const fetchData = async () => {\n      // Ваши операции загрузки данных или настройки игры\n      setTimeout(() => {\n        setIsLoading(false);\n      }, 2000);\n    };\n    fetchData();\n  }, []);\n  useEffect(() => {\n    if (!isLoading) {\n      // Дополнительная логика после окончания загрузки\n    }\n  }, [isLoading]);\n  const handleClick = i => {\n    if (winner || board[i]) {\n      return;\n    }\n    const newBoard = [...board];\n    newBoard[i] = xIsNext ? 'X' : 'O';\n    setBoard(newBoard);\n    setXIsNext(!xIsNext);\n    setMovesCount(movesCount + 1);\n    const calculatedWinner = calculateWinner(newBoard);\n    if (calculatedWinner) {\n      setWinner(calculatedWinner);\n    } else if (movesCount + 1 === 9) {\n      setWinner('Draw');\n    }\n  };\n  const startGame = () => {\n    setIsGameStarted(true);\n  };\n  const renderSquare = i => /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"square\",\n    onClick: () => handleClick(i),\n    children: board[i]\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n  const status = winner ? winner === 'Draw' ? \"It's a Draw!\" : 'Winner: ' + winner : 'Next player: ' + (xIsNext ? 'X' : 'O');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"center-container\",\n    children: isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"preloader-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"preloader\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-board\",\n      children: isGameStarted ? /*#__PURE__*/_jsxDEV(GameBoard, {\n        board: board,\n        handleClick: handleClick,\n        status: status,\n        renderSquare: renderSquare\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(StartButton, {\n        onStartClick: startGame\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n}\n_s(TicTacToe, \"eQ4S4Z3Efeln/mm4G1/F8RVYrXg=\");\n_c = TicTacToe;\nexport default TicTacToe;\nvar _c;\n$RefreshReg$(_c, \"TicTacToe\");","map":{"version":3,"names":["React","useState","useEffect","GameBoard","StartButton","jsxDEV","_jsxDEV","TicTacToe","_s","isLoading","setIsLoading","isGameStarted","setIsGameStarted","board","setBoard","Array","fill","xIsNext","setXIsNext","winner","setWinner","movesCount","setMovesCount","fetchData","setTimeout","handleClick","i","newBoard","calculatedWinner","calculateWinner","startGame","renderSquare","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","status","onStartClick","_c","$RefreshReg$"],"sources":["C:/1/src/component/TicTacToe.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport GameBoard from './GameBoard';\r\nimport StartButton from './StartButton';\r\n\r\nfunction TicTacToe() {\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [isGameStarted, setIsGameStarted] = useState(false);\r\n    const [board, setBoard] = useState(Array(9).fill(null));\r\n    const [xIsNext, setXIsNext] = useState(true);\r\n    const [winner, setWinner] = useState(null);\r\n    const [movesCount, setMovesCount] = useState(0);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            // Ваши операции загрузки данных или настройки игры\r\n            setTimeout(() => {\r\n                setIsLoading(false);\r\n            }, 2000);\r\n        };\r\n\r\n        fetchData();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (!isLoading) {\r\n            // Дополнительная логика после окончания загрузки\r\n        }\r\n    }, [isLoading]);\r\n\r\n    const handleClick = (i) => {\r\n        if (winner || board[i]) {\r\n            return;\r\n        }\r\n        const newBoard = [...board];\r\n        newBoard[i] = xIsNext ? 'X' : 'O';\r\n        setBoard(newBoard);\r\n        setXIsNext(!xIsNext);\r\n        setMovesCount(movesCount + 1);\r\n\r\n        const calculatedWinner = calculateWinner(newBoard);\r\n        if (calculatedWinner) {\r\n            setWinner(calculatedWinner);\r\n        } else if (movesCount + 1 === 9) {\r\n            setWinner('Draw');\r\n        }\r\n    };\r\n\r\n    const startGame = () => {\r\n        setIsGameStarted(true);\r\n    };\r\n\r\n    const renderSquare = (i) => (\r\n        <button className=\"square\" onClick={() => handleClick(i)}>\r\n            {board[i]}\r\n        </button>\r\n    );\r\n\r\n    const status = winner\r\n        ? winner === 'Draw'\r\n            ? \"It's a Draw!\"\r\n            : 'Winner: ' + winner\r\n        : 'Next player: ' + (xIsNext ? 'X' : 'O');\r\n\r\n    return (\r\n        <div className=\"center-container\">\r\n            {isLoading ? (\r\n                <div className=\"preloader-container\">\r\n                    <div className=\"preloader\"></div>\r\n                </div>\r\n            ) : (\r\n                <div className=\"game-board\">\r\n                    {isGameStarted ? (\r\n                        <GameBoard\r\n                            board={board}\r\n                            handleClick={handleClick}\r\n                            status={status}\r\n                            renderSquare={renderSquare}\r\n                        />\r\n                    ) : (\r\n                        <StartButton onStartClick={startGame} />\r\n                    )}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TicTacToe;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}