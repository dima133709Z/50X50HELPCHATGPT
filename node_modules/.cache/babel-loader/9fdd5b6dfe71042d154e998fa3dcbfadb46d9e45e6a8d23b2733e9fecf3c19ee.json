{"ast":null,"code":"var _jsxFileName = \"C:\\\\50X50\\\\src\\\\component\\\\GameBoard\\\\GameBoard.js\";\nimport React from 'react';\nimport style from '../../styles/GameBoard.module.scss';\n\n// Компонент GameBoard отображает игровое поле, состоящее из квадратных ячеек.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GameBoard(props) {\n  const boardSize = 50; // Размер игровой доски (50x50)\n\n  const rows = [];\n\n  // Создаем строки игровой доски.\n  for (let i = 0; i < boardSize; i++) {\n    const row = [];\n    // Создаем ячейки внутри строки с использованием renderSquare.\n    for (let j = 0; j < boardSize; j++) {\n      row.push(props.renderSquare(i * boardSize + j));\n    }\n    // Добавляем строку в массив rows.\n    rows.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      className: style.boardRow,\n      children: row\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this));\n  }\n\n  // Отображаем игровую доску с созданными строками и ячейками.\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: rows\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 12\n  }, this);\n}\n_c = GameBoard;\nexport default GameBoard;\nvar _c;\n$RefreshReg$(_c, \"GameBoard\");","map":{"version":3,"names":["React","style","jsxDEV","_jsxDEV","GameBoard","props","boardSize","rows","i","row","j","push","renderSquare","className","boardRow","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/50X50/src/component/GameBoard/GameBoard.js"],"sourcesContent":["import React from 'react';\nimport style from '../../styles/GameBoard.module.scss';\n\n// Компонент GameBoard отображает игровое поле, состоящее из квадратных ячеек.\nfunction GameBoard(props) {\n    const boardSize = 50; // Размер игровой доски (50x50)\n\n    const rows = [];\n\n    // Создаем строки игровой доски.\n    for (let i = 0; i < boardSize; i++) {\n        const row = [];\n        // Создаем ячейки внутри строки с использованием renderSquare.\n        for (let j = 0; j < boardSize; j++) {\n            row.push(props.renderSquare(i * boardSize + j));\n        }\n        // Добавляем строку в массив rows.\n        rows.push(\n            <div key={i} className={style.boardRow}>\n                {row}\n            </div>\n        );\n    }\n\n    // Отображаем игровую доску с созданными строками и ячейками.\n    return <div>{rows}</div>;\n}\n\nexport default GameBoard;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,oCAAoC;;AAEtD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,SAASC,SAASA,CAACC,KAAK,EAAE;EACtB,MAAMC,SAAS,GAAG,EAAE,CAAC,CAAC;;EAEtB,MAAMC,IAAI,GAAG,EAAE;;EAEf;EACA,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,SAAS,EAAEE,CAAC,EAAE,EAAE;IAChC,MAAMC,GAAG,GAAG,EAAE;IACd;IACA,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,SAAS,EAAEI,CAAC,EAAE,EAAE;MAChCD,GAAG,CAACE,IAAI,CAACN,KAAK,CAACO,YAAY,CAACJ,CAAC,GAAGF,SAAS,GAAGI,CAAC,CAAC,CAAC;IACnD;IACA;IACAH,IAAI,CAACI,IAAI,eACLR,OAAA;MAAaU,SAAS,EAAEZ,KAAK,CAACa,QAAS;MAAAC,QAAA,EAClCN;IAAG,GADED,CAAC;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEN,CACT,CAAC;EACL;;EAEA;EACA,oBAAOhB,OAAA;IAAAY,QAAA,EAAMR;EAAI;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AAC5B;AAACC,EAAA,GAtBQhB,SAAS;AAwBlB,eAAeA,SAAS;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}